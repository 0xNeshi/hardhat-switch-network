# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Build & Test

on:
    push:
        branches:
            - master
    pull_request:
        branches:
            - master
    schedule:
        - cron: "0 0 * * 0" # Run weekly on Sunday at midnight UTC

jobs:
    test:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                node-version: [16, 18, 20, 22, 24]

        steps:
            - uses: actions/checkout@v5
            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v5
              with:
                  node-version: ${{ matrix.node-version }}
                  cache: "npm"
            - run: npm run install-all
            - run: npx hardhat vars set ALCHEMY_API_KEY ${{ secrets.ALCHEMY_API_KEY }} &&
                  npx hardhat vars set DEPLOYER_PRIVATE_KEY ${{ secrets.DEPLOYER_PRIVATE_KEY }} &&
                  npx hardhat vars set ETHERSCAN_API_KEY ${{ secrets.ETHERSCAN_API_KEY }} &&
                  npx hardhat vars set POLYGONSCAN_API_KEY ${{ secrets.POLYGONSCAN_API_KEY }}
            - run: npm run build --if-present
            - run: npm run deploy
            - run: npm run test-all

    test-latest:
        if: github.event_name == 'schedule'
        runs-on: ubuntu-latest
        strategy:
            matrix:
                node-version: [22, 24]

        steps:
            - uses: actions/checkout@v5
            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v5
              with:
                  node-version: ${{ matrix.node-version }}
            - run: npm run install-all-latest
            - run: npx hardhat vars set ALCHEMY_API_KEY ${{ secrets.ALCHEMY_API_KEY }} &&
                  npx hardhat vars set DEPLOYER_PRIVATE_KEY ${{ secrets.DEPLOYER_PRIVATE_KEY }} &&
                  npx hardhat vars set ETHERSCAN_API_KEY ${{ secrets.ETHERSCAN_API_KEY }} &&
                  npx hardhat vars set POLYGONSCAN_API_KEY ${{ secrets.POLYGONSCAN_API_KEY }}
            - run: npm run build --if-present
            - run: npm run deploy
            - run: npm run test-all
